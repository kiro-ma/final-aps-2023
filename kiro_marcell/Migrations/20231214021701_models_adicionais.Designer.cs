// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kiro_marcell.Models;

#nullable disable

namespace kiro_marcell.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231214021701_models_adicionais")]
    partial class models_adicionais
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("kiro_marcell.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int?>("NotaDeVendaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotaDeVendaId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("kiro_marcell.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Percentual")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("kiro_marcell.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("kiro_marcell.Models.NotaDeVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("PagamentoId")
                        .HasColumnType("int");

                    b.Property<bool>("Tipo")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PagamentoId");

                    b.ToTable("NotaDeVenda");
                });

            modelBuilder.Entity("kiro_marcell.Models.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataLimite")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Pago")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("kiro_marcell.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<int?>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("kiro_marcell.Models.TipoDePagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("InformacoesAdicionais")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("NomeDoCobrado")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoDePagamento");

                    b.HasDiscriminator<string>("Discriminator").HasValue("TipoDePagamento");
                });

            modelBuilder.Entity("kiro_marcell.Models.Transportadora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int?>("NotaDeVendaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotaDeVendaId");

                    b.ToTable("Transportadora");
                });

            modelBuilder.Entity("kiro_marcell.Models.Vendedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int?>("NotaDeVendaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotaDeVendaId");

                    b.ToTable("Vendedor");
                });

            modelBuilder.Entity("kiro_marcell.Models.TipoPagamentoComCartao", b =>
                {
                    b.HasBaseType("kiro_marcell.Models.TipoDePagamento");

                    b.Property<string>("Bandeira")
                        .HasColumnType("longtext");

                    b.Property<int>("NumeroDoCartao")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("TipoPagamentoComCartao");
                });

            modelBuilder.Entity("kiro_marcell.Models.TipoPagamentoComCheque", b =>
                {
                    b.HasBaseType("kiro_marcell.Models.TipoDePagamento");

                    b.Property<int>("Banco")
                        .HasColumnType("int");

                    b.Property<string>("NomeDoBanco")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("TipoPagamentoComCheque");
                });

            modelBuilder.Entity("kiro_marcell.Models.Cliente", b =>
                {
                    b.HasOne("kiro_marcell.Models.NotaDeVenda", null)
                        .WithMany("Clientes")
                        .HasForeignKey("NotaDeVendaId");
                });

            modelBuilder.Entity("kiro_marcell.Models.Item", b =>
                {
                    b.HasOne("kiro_marcell.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("kiro_marcell.Models.NotaDeVenda", b =>
                {
                    b.HasOne("kiro_marcell.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("kiro_marcell.Models.Pagamento", null)
                        .WithMany("Notas")
                        .HasForeignKey("PagamentoId");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("kiro_marcell.Models.Produto", b =>
                {
                    b.HasOne("kiro_marcell.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("kiro_marcell.Models.Transportadora", b =>
                {
                    b.HasOne("kiro_marcell.Models.NotaDeVenda", null)
                        .WithMany("Transportadoras")
                        .HasForeignKey("NotaDeVendaId");
                });

            modelBuilder.Entity("kiro_marcell.Models.Vendedor", b =>
                {
                    b.HasOne("kiro_marcell.Models.NotaDeVenda", null)
                        .WithMany("Vendedores")
                        .HasForeignKey("NotaDeVendaId");
                });

            modelBuilder.Entity("kiro_marcell.Models.NotaDeVenda", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Transportadoras");

                    b.Navigation("Vendedores");
                });

            modelBuilder.Entity("kiro_marcell.Models.Pagamento", b =>
                {
                    b.Navigation("Notas");
                });
#pragma warning restore 612, 618
        }
    }
}
